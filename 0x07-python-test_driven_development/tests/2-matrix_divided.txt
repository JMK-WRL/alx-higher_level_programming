# Test cases for matrix_divided function
>>> from 2-matrix_divided import matrix_divided

# Test case 1: Divide a matrix by an integer divisor
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> result = matrix_divided(matrix, 2)
>>> result
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Test case 2: Divide a matrix by a float divisor
>>> matrix = [[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]]
>>> result = matrix_divided(matrix, 0.1)
>>> result
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

# Test case 3: Attempt to divide by zero (should raise a ZeroDivisionError)
>>> matrix = [[1, 2], [3, 4]]
>>> result = matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 4: Attempt to divide a non-matrix (should raise a TypeError)
>>> matrix = "Not a matrix"
>>> result = matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 5: Attempt to divide a matrix with rows of different sizes (should raise a TypeError)
>>> matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
>>> result = matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test case 6: Attempt to divide by a non-number (should raise a TypeError)
>>> matrix = [[1, 2], [3, 4]]
>>> result = matrix_divided(matrix, "Not a number")
Traceback (most recent call last):
    ...
TypeError: div must be a number
